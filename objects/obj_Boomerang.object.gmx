<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Boomerang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>v_throw = 35;
v_returnspeed = 0;
a_returnaccel = 1.5;
c_throwdir = 45;
v_maxspeed = 20;
c_currstep = 0;
c_backsteps = 10;
move_x = 0;
move_y = 0;
xflipped = 1;
yflipped = 1;
xcolliding = 0;
ycolliding = 0;

//drawing variables
depth = -1;

skulldir = point_direction(obj_SkullMan.x,obj_SkullMan.y,x,y);
throwdeltax = dcos(c_throwdir)*v_throw;
throwdeltay = -dsin(c_throwdir)*v_throw;
returndeltax = -dcos(skulldir)*v_returnspeed;
returndeltay = dsin(skulldir)*v_returnspeed;

for(i=0;i&lt;c_backsteps;i++)
{
    prev_x[i] = (1/c_backsteps)*(throwdeltax + returndeltax);
    prev_y[i] = (1/c_backsteps)*(throwdeltay + returndeltay);
}

image_angle += random(360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move_towards_point(p_throwpointx,p_throwpointy,v_throw);
//v_returnspeed += a_returnaccel;
//move_towards_point(obj_SkullMan.x,obj_SkullMan.y,v_returnspeed); 

throwdeltax = dcos(c_throwdir)*v_throw;
throwdeltay = -dsin(c_throwdir)*v_throw;

skulldir = point_direction(obj_SkullMan.x,obj_SkullMan.y,x,y);
        
returndeltax = -dcos(skulldir)*v_returnspeed;
returndeltay = dsin(skulldir)*v_returnspeed;

v_returnspeed += a_returnaccel;

prev_x[c_currstep] = (1/c_backsteps)*(throwdeltax + returndeltax);
prev_y[c_currstep] = (1/c_backsteps)*(throwdeltay + returndeltay);
c_currstep = (c_currstep+1)%c_backsteps;

//c_speed = sqrt(abs((throwdeltax + returndeltax)^2+(throwdeltay + returndeltay)^2));
//if(c_speed &gt; v_maxspeed)
//    c_ratio = v_maxspeed/c_speed;
//else
//    c_ratio = 1;

move_x = 0;
move_y = 0;

for(i=0;i&lt;c_backsteps;i++)
{
    move_x+=prev_x[i];
    move_y+=prev_y[i];
}

c_speed = sqrt((move_x)*(move_x)+(move_y)*(move_y));
if(c_speed&gt;v_maxspeed)
    c_ratio = v_maxspeed/c_speed;
else
    c_ratio = 1;

hspeed = c_ratio * move_x;
vspeed = c_ratio * move_y;

//old movement
//x += c_ratio*(throwdeltax + returndeltax);
//y += c_ratio*(throwdeltay + returndeltay);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_SkullMan">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += 59;
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
